#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EDSDoctorsApp.HtmlViews2
{
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

#line 1 "examination.cshtml"
using EDSDoctorsApp.Resources;

#line default
#line hidden

#line 2 "examination.cshtml"
using EDSDoctorsApp;

#line default
#line hidden

#line 3 "examination.cshtml"
using EDSDoctorsApp.APIs.Patients;

#line default
#line hidden

#line 4 "examination.cshtml"
using Xamarin.Essentials;

#line default
#line hidden


[System.CodeDom.Compiler.GeneratedCodeAttribute("RazorTemplatePreprocessor", "17.1.0.269")]
public partial class examination : examinationBase
{

#line hidden

#line 5 "examination.cshtml"
public (List<CustomFieldVM>,string[],string,List<ExaminationInvestigation>,List<EDSDoctorsApp.APIs.Account.DropDownListModel>,List<EDSDoctorsApp.APIs.Account.DropDownListModel>,List<EDSDoctorsApp.APIs.Account.DropDownListModel>,List<ExaminationTreatment>,string,List<EDSDoctorsApp.APIs.Account.VmAttachments>) Model { get; set; }

#line default
#line hidden


public override void Execute()
{
WriteLiteral("<!DOCTYPE HTML>\r\n<html");

WriteLiteral(" lang=\"en\"");

WriteLiteral(">\r\n\r\n<head>\r\n    <meta");

WriteLiteral(" http-equiv=\"Content-Type\"");

WriteLiteral(" content=\"text/html; charset=utf-8\"");

WriteLiteral(" />\r\n    <meta");

WriteLiteral(" name=\"apple-mobile-web-app-capable\"");

WriteLiteral(" content=\"yes\"");

WriteLiteral(">\r\n    <meta");

WriteLiteral(" name=\"apple-mobile-web-app-status-bar-style\"");

WriteLiteral(" content=\"black-translucent\"");

WriteLiteral(">\r\n    <meta");

WriteLiteral(" name=\"viewport\"");

WriteLiteral("\r\n          content=\"width=device-width, initial-scale=1, minimum-scale=1, maximu" +
"m-scale=1, viewport-fit=cover\"");

WriteLiteral(" />\r\n    <title>eDoctor - New Examination</title>\r\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteAttribute ("href", " href=\"", "\""

#line 16 "examination.cshtml"
          , Tuple.Create<string,object,bool> ("", string.Concat("Sticky53/styles/bootstrap",AppResources.dir2,".css")

#line default
#line hidden
, false)
);
WriteLiteral(">\r\n    <link");

WriteLiteral(" href=\"Sticky53/fonts/css.css?family=Roboto:300,300i,400,400i,500,500i,700,700i,9" +
"00,900i|Source+Sans+Pro:300,300i,400,400i,600,600i,700,700i,900,900i&display=swa" +
"p\"");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(">\r\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" href=\"Sticky53/fonts/css/fontawesome-all.min.css\"");

WriteLiteral(">\r\n    <link");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" href=\"Sticky53/styles/select2.min.css\"");

WriteLiteral(">\r\n    ");

WriteLiteral("\r\n    <link");

WriteLiteral(" href=\"Sticky/plugins/BootstrapDatePicker/bootstrap-datepicker.min.css\"");

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" />\r\n    <link");

WriteLiteral(" rel=\"manifest\"");

WriteLiteral(" href=\"_manifest.json\"");

WriteLiteral(" data-pwa-version=\"set_in_manifest_and_pwa_js\"");

WriteLiteral(">\r\n    <link");

WriteLiteral(" rel=\"apple-touch-icon\"");

WriteLiteral(" sizes=\"180x180\"");

WriteLiteral(" href=\"app/icons/icon-192x192.png\"");

WriteLiteral(">\r\n    <script");

WriteLiteral(" src=\"Sticky/scripts/jquery-3.6.0.min.js\"");

WriteLiteral("></script>\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" src=\"Sticky53/scripts/bootstrap.min.js\"");

WriteLiteral("></script>\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" src=\"Sticky53/scripts/custom.js\"");

WriteLiteral("></script>\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" src=\"Sticky53/scripts/select2.min.js\"");

WriteLiteral("></script>\r\n    ");

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(" src=\"Sticky53/scripts/moment.min.js\"");

WriteLiteral("></script>\r\n    <script");

WriteLiteral(" src=\"Sticky/plugins/BootstrapDatePicker/bootstrap-datepicker.min.js\"");

WriteLiteral("></script>\r\n\r\n\r\n    <style>\r\n        .select2-container {\r\n            width: 100" +
"% !important;\r\n            padding: 0;\r\n        }\r\n\r\n        .hidden {\r\n        " +
"    display: none !important;\r\n        }\r\n    </style>\r\n\r\n</head>\r\n\r\n<body");

WriteLiteral(" class=\"theme-light\"");

WriteLiteral(" data-highlight=\"highlight-red\"");

WriteLiteral(" data-gradient=\"body-default\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" id=\"preloader\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"spinner-border color-highlight\"");

WriteLiteral(" role=\"status\"");

WriteLiteral("></div>\r\n    </div>\r\n    <div");

WriteLiteral(" id=\"page\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"header header-fixed header-logo-center \"");

WriteLiteral(" id=\"headerScope\"");

WriteLiteral(">\r\n            <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"header-title\"");

WriteLiteral(">New Examination</a>\r\n            <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" data-back-button");

WriteLiteral(" class=\"header-icon header-icon-1\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fas fa-arrow-left\"");

WriteLiteral("></i></a>\r\n            <!-- <a href=\"#\" data-toggle-theme class=\"header-icon head" +
"er-icon-4\"><i class=\"fas fa-lightbulb\"></i></a> -->\r\n        </div>\r\n        <di" +
"v");

WriteLiteral(" class=\"page-content header-clear-medium\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"card card-style\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" class=\"content\"");

WriteLiteral(">\r\n                    <p");

WriteLiteral(" class=\" mb-n3 pb-0 text-truncate\"");

WriteLiteral(">");


#line 60 "examination.cshtml"
                                                    Write(App.PatientEMR.PatientsMRNo);


#line default
#line hidden
WriteLiteral("</p>\r\n                    <h2");

WriteLiteral(" class=\" pt-3 pb-3 text-truncate\"");

WriteLiteral(">");


#line 61 "examination.cshtml"
                                                    Write(App.PatientEMR.PatientsName);


#line default
#line hidden
WriteLiteral("</h2>\r\n                    <p");

WriteLiteral(" class=\" font-13 opacity-80 mt-n3\"");

WriteLiteral("><i");

WriteLiteral(" class=\"far fa-calendar\"");

WriteLiteral("></i>");


#line 62 "examination.cshtml"
                                                                                   Write(App.PatientEMR.PatientsDOB);


#line default
#line hidden
WriteLiteral("</p>\r\n                    <p");

WriteLiteral(" class=\" font-13 opacity-80 mt-n3\"");

WriteLiteral("><i");

WriteAttribute ("class", " class=\"", "\""
, Tuple.Create<string,object,bool> ("", "far", true)
, Tuple.Create<string,object,bool> (" ", "fa-", true)

#line 63 "examination.cshtml"
                                    , Tuple.Create<string,object,bool> ("", App.PatientEMR.PatientsGender == "Male" ? "mars" : "venus"

#line default
#line hidden
, false)
);
WriteLiteral("></i>");


#line 63 "examination.cshtml"
                                                                                                                                        Write(App.PatientEMR.PatientsGender);


#line default
#line hidden
WriteLiteral("</p>\r\n                    <p");

WriteLiteral(" class=\" font-13 opacity-80 mt-n3\"");

WriteLiteral("><i");

WriteLiteral(" class=\"far fa-phone\"");

WriteLiteral("></i>");


#line 64 "examination.cshtml"
                                                                                Write(App.PatientEMR.PatientsMobile);


#line default
#line hidden
WriteLiteral("</p>\r\n                    <!-- <p class=\" font-13 opacity-80\"><i class=\"fa fa-map" +
"-marker-alt\"></i> Melbourne, Victoria, Australia Collins Street</p> -->\r\n       " +
"         </div>\r\n            </div>\r\n            <form");

WriteLiteral(" action=\"hybrid:addeditexamination\"");

WriteLiteral(" class=\"AddExaminationForm\"");

WriteLiteral(" onsubmit=\"$(\'.BtnSave\').attr(\'disabled\', \'disabled\'); LoaderShow();\"");

WriteLiteral(">\r\n                <input hidden");

WriteLiteral(" name=\"treatments\"");

WriteLiteral(" id=\"treatments\"");

WriteLiteral(" />\r\n                <input hidden");

WriteLiteral(" name=\"examID\"");

WriteLiteral(" id=\"examID\"");

WriteAttribute ("value", " value=\"", "\""

#line 70 "examination.cshtml"
                        , Tuple.Create<string,object,bool> ("", Model.Item9

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                <div");

WriteLiteral(" class=\"accordion\"");

WriteLiteral(" id=\"accordionExample\"");

WriteLiteral(">\r\n");


#line 72 "examination.cshtml"
                    

#line default
#line hidden

#line 72 "examination.cshtml"
                      
                        foreach (string section in Model.Item2)
                        {
                            var x = section;


#line default
#line hidden
WriteLiteral("                            <div");

WriteLiteral(" class=\"accordion-item\"");

WriteLiteral(">\r\n                                <h2");

WriteLiteral(" class=\"accordion-header\"");

WriteLiteral(" id=\"headingOne\"");

WriteLiteral(">\r\n                                    <button");

WriteLiteral(" class=\"btn accordion-btn no-effect\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" data-bs-toggle=\"collapse\"");

WriteLiteral(" data-bs-target=\"#");


#line 78 "examination.cshtml"
                                                                                                                                    Write(x.Split(' ')[0]);


#line default
#line hidden
WriteLiteral("\"");

WriteLiteral(" aria-expanded=\"true\"");

WriteAttribute ("aria-controls", " aria-controls=\"", "\""

#line 78 "examination.cshtml"
                                                                                                                                                        , Tuple.Create<string,object,bool> ("", x.Split(' ')[0]

#line default
#line hidden
, false)
);
WriteLiteral(">\r\n");

WriteLiteral("                                        ");


#line 79 "examination.cshtml"
                                   Write(x);


#line default
#line hidden
WriteLiteral("\r\n                                    </button>\r\n                                " +
"</h2>\r\n                                <div");

WriteAttribute ("id", " id=\"", "\""

#line 82 "examination.cshtml"
  , Tuple.Create<string,object,bool> ("", x.Split(' ')[0]

#line default
#line hidden
, false)
);
WriteLiteral(" class=\"accordion-collapse collapse show\"");

WriteLiteral(" aria-labelledby=\"headingOne\"");

WriteLiteral(" data-bs-parent=\"#accordionExample\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"accordion-body\"");

WriteLiteral(">\r\n");


#line 84 "examination.cshtml"
                                        

#line default
#line hidden

#line 84 "examination.cshtml"
                                          
                                            int i = 0;
                                        

#line default
#line hidden
WriteLiteral("\r\n");


#line 87 "examination.cshtml"
                                        

#line default
#line hidden

#line 87 "examination.cshtml"
                                         foreach (CustomFieldVM item in Model.Item1)
                                        {
                                            if (item.ExaminationsDataSection == section)
                                            {
                                                if (item.FieldType == "Text")
                                                {


#line default
#line hidden
WriteLiteral("                                                    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\"col-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                                <label");

WriteLiteral(" for=\"\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">");


#line 96 "examination.cshtml"
                                                                                                 Write(item.ExaminationsDataField);


#line default
#line hidden
WriteLiteral("</label>\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 97 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 97 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].id", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 97 "examination.cshtml"
                                                                                                              , Tuple.Create<string,object,bool> ("", item.Id??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 98 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 98 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRhid", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 98 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRhid

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 99 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 99 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataExaminationId", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 99 "examination.cshtml"
                                                                                                                                         , Tuple.Create<string,object,bool> ("", item.ExaminationsDataExaminationId??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 100 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 100 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataSection", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 100 "examination.cshtml"
                                                                                                                                  , Tuple.Create<string,object,bool> ("", item.ExaminationsDataSection

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 101 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 101 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataField", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 101 "examination.cshtml"
                                                                                                                                , Tuple.Create<string,object,bool> ("", item.ExaminationsDataField

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 102 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 102 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataIsAbnormal", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 102 "examination.cshtml"
                                                                                                                                     , Tuple.Create<string,object,bool> ("", item.ExaminationsDataIsAbnormal

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 103 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 103 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRank", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 103 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRank

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" type=\"text\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDataValue", true)

#line 104 "examination.cshtml"
                                                                                          , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 104 "examination.cshtml"
                                                                                                                       , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataValue", true)
);
WriteAttribute ("placeholder", " placeholder=\"", "\""

#line 104 "examination.cshtml"
                                                                                                                                                               , Tuple.Create<string,object,bool> ("", item.FieldType

#line default
#line hidden
, false)
);
WriteAttribute ("value", " value=\"", "\""

#line 104 "examination.cshtml"
                                                                                                                                                                                       , Tuple.Create<string,object,bool> ("", item.ExaminationsDataValue

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                            </div>\r\n        " +
"                                                </div>\r\n                        " +
"                            </div>\r\n");


#line 108 "examination.cshtml"
                                                }
                                                if (item.FieldType == "DropDownList")
                                                {


#line default
#line hidden
WriteLiteral("                                                    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\"col-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                                <label");

WriteLiteral(" for=\"\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">");


#line 114 "examination.cshtml"
                                                                                                 Write(item.ExaminationsDataField);


#line default
#line hidden
WriteLiteral("</label>\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 115 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 115 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].id", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 115 "examination.cshtml"
                                                                                                              , Tuple.Create<string,object,bool> ("", item.Id??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 116 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 116 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRhid", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 116 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRhid

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 117 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 117 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataExaminationId", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 117 "examination.cshtml"
                                                                                                                                         , Tuple.Create<string,object,bool> ("", item.ExaminationsDataExaminationId??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 118 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 118 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataSection", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 118 "examination.cshtml"
                                                                                                                                  , Tuple.Create<string,object,bool> ("", item.ExaminationsDataSection

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 119 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 119 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataField", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 119 "examination.cshtml"
                                                                                                                                , Tuple.Create<string,object,bool> ("", item.ExaminationsDataField

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 120 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 120 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataIsAbnormal", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 120 "examination.cshtml"
                                                                                                                                     , Tuple.Create<string,object,bool> ("", item.ExaminationsDataIsAbnormal

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 121 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 121 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRank", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 121 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRank

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <select");

WriteLiteral(" class=\"SearchSelect\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDataValue", true)

#line 122 "examination.cshtml"
                                                                               , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 122 "examination.cshtml"
                                                                                                            , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataValue", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 122 "examination.cshtml"
                                                                                                                                              , Tuple.Create<string,object,bool> ("", item.ExaminationsDataValue

#line default
#line hidden
, false)
);
WriteLiteral(">\r\n");


#line 123 "examination.cshtml"
                                                                    

#line default
#line hidden

#line 123 "examination.cshtml"
                                                                     foreach (var opt in item.FieldValue.Split('|'))
                                                                    {


#line default
#line hidden
WriteLiteral("                                                                        <option");

WriteAttribute ("value", " value=\"", "\""

#line 125 "examination.cshtml"
                                                , Tuple.Create<string,object,bool> ("", opt

#line default
#line hidden
, false)
);
WriteLiteral(">");


#line 125 "examination.cshtml"
                                                                                        Write(opt);


#line default
#line hidden
WriteLiteral("</option>\r\n");


#line 126 "examination.cshtml"
                                                                    }


#line default
#line hidden
WriteLiteral(@"                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
");


#line 131 "examination.cshtml"
                                                }
                                                if (item.FieldType == "MultiLine")
                                                {


#line default
#line hidden
WriteLiteral("                                                    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\"col-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                                <label");

WriteLiteral(" for=\"\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">");


#line 137 "examination.cshtml"
                                                                                                 Write(item.ExaminationsDataField);


#line default
#line hidden
WriteLiteral("</label>\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 138 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 138 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].id", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 138 "examination.cshtml"
                                                                                                              , Tuple.Create<string,object,bool> ("", item.Id??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 139 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 139 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRhid", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 139 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRhid

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 140 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 140 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataExaminationId", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 140 "examination.cshtml"
                                                                                                                                         , Tuple.Create<string,object,bool> ("", item.ExaminationsDataExaminationId??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 141 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 141 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataSection", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 141 "examination.cshtml"
                                                                                                                                  , Tuple.Create<string,object,bool> ("", item.ExaminationsDataSection

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 142 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 142 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataField", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 142 "examination.cshtml"
                                                                                                                                , Tuple.Create<string,object,bool> ("", item.ExaminationsDataField

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 143 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 143 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataIsAbnormal", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 143 "examination.cshtml"
                                                                                                                                     , Tuple.Create<string,object,bool> ("", item.ExaminationsDataIsAbnormal

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 144 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 144 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRank", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 144 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRank

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <textarea");

WriteLiteral(" class=\"form-control\"");

WriteLiteral(" placeholder=\"Enter your message\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDataValue", true)

#line 145 "examination.cshtml"
                                                                                                                  , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 145 "examination.cshtml"
                                                                                                                                               , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataValue", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 145 "examination.cshtml"
                                                                                                                                                                                 , Tuple.Create<string,object,bool> ("", item.ExaminationsDataValue

#line default
#line hidden
, false)
);
WriteLiteral("></textarea>\r\n                                                            </div>\r" +
"\n                                                        </div>\r\n               " +
"                                     </div>\r\n");


#line 149 "examination.cshtml"
                                                }
                                                if (item.FieldType == "CheckBox")
                                                {


#line default
#line hidden
WriteLiteral("                                                    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\"col-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                                <label");

WriteLiteral(" for=\"\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">");


#line 155 "examination.cshtml"
                                                                                                 Write(item.ExaminationsDataField);


#line default
#line hidden
WriteLiteral("</label>\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 156 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 156 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].id", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 156 "examination.cshtml"
                                                                                                              , Tuple.Create<string,object,bool> ("", item.Id??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 157 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 157 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRhid", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 157 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRhid

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 158 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 158 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataExaminationId", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 158 "examination.cshtml"
                                                                                                                                         , Tuple.Create<string,object,bool> ("", item.ExaminationsDataExaminationId??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 159 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 159 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataSection", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 159 "examination.cshtml"
                                                                                                                                  , Tuple.Create<string,object,bool> ("", item.ExaminationsDataSection

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 160 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 160 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataField", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 160 "examination.cshtml"
                                                                                                                                , Tuple.Create<string,object,bool> ("", item.ExaminationsDataField

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 161 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 161 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataIsAbnormal", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 161 "examination.cshtml"
                                                                                                                                     , Tuple.Create<string,object,bool> ("", item.ExaminationsDataIsAbnormal

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 162 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 162 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRank", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 162 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRank

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"checkbox\"");

WriteLiteral(" class=\"form-check-input\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDataValue", true)

#line 163 "examination.cshtml"
                                                                                                  , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 163 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataValue", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 163 "examination.cshtml"
                                                                                                                                                                 , Tuple.Create<string,object,bool> ("", item.ExaminationsDataValue

#line default
#line hidden
, false)
);
WriteLiteral(">\r\n                                                            </div>\r\n          " +
"                                              </div>\r\n                          " +
"                          </div>\r\n");


#line 167 "examination.cshtml"
                                                }

                                                if (item.FieldType == "Date")
                                                {


#line default
#line hidden
WriteLiteral("                                                    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\"col-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                                <label");

WriteLiteral(" for=\"\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">");


#line 174 "examination.cshtml"
                                                                                                 Write(item.ExaminationsDataField);


#line default
#line hidden
WriteLiteral("</label>\r\n                                                                <div");

WriteLiteral(" class=\"input-group\"");

WriteLiteral(">\r\n                                                                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 176 "examination.cshtml"
                                                                     , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 176 "examination.cshtml"
                                                                                                  , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].id", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 176 "examination.cshtml"
                                                                                                                  , Tuple.Create<string,object,bool> ("", item.Id??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 177 "examination.cshtml"
                                                                     , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 177 "examination.cshtml"
                                                                                                  , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRhid", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 177 "examination.cshtml"
                                                                                                                                   , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRhid

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 178 "examination.cshtml"
                                                                     , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 178 "examination.cshtml"
                                                                                                  , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataExaminationId", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 178 "examination.cshtml"
                                                                                                                                             , Tuple.Create<string,object,bool> ("", item.ExaminationsDataExaminationId??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 179 "examination.cshtml"
                                                                     , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 179 "examination.cshtml"
                                                                                                  , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataSection", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 179 "examination.cshtml"
                                                                                                                                      , Tuple.Create<string,object,bool> ("", item.ExaminationsDataSection

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 180 "examination.cshtml"
                                                                     , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 180 "examination.cshtml"
                                                                                                  , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataField", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 180 "examination.cshtml"
                                                                                                                                    , Tuple.Create<string,object,bool> ("", item.ExaminationsDataField

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 181 "examination.cshtml"
                                                                     , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 181 "examination.cshtml"
                                                                                                  , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataIsAbnormal", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 181 "examination.cshtml"
                                                                                                                                         , Tuple.Create<string,object,bool> ("", item.ExaminationsDataIsAbnormal

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                    <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 182 "examination.cshtml"
                                                                     , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 182 "examination.cshtml"
                                                                                                  , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRank", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 182 "examination.cshtml"
                                                                                                                                   , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRank

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                    <input");

WriteLiteral(" class=\"form-control datepicker\"");

WriteLiteral(" type=\"text\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDataValue", true)

#line 183 "examination.cshtml"
                                                                                                         , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 183 "examination.cshtml"
                                                                                                                                      , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataValue", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 183 "examination.cshtml"
                                                                                                                                                                        , Tuple.Create<string,object,bool> ("", item.ExaminationsDataValue

#line default
#line hidden
, false)
);
WriteLiteral(">\r\n                                                                    <span");

WriteLiteral(" class=\"input-group-addon\"");

WriteLiteral("> <i");

WriteLiteral(" class=\"fa fa-calendar\"");

WriteLiteral(@"></i></span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
");


#line 189 "examination.cshtml"

                                                }
                                                if (item.FieldType == "Time")
                                                {


#line default
#line hidden
WriteLiteral("                                                    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\"col-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                                <label");

WriteLiteral(" for=\"\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">");


#line 196 "examination.cshtml"
                                                                                                 Write(item.ExaminationsDataField);


#line default
#line hidden
WriteLiteral("</label>\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 197 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 197 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].id", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 197 "examination.cshtml"
                                                                                                              , Tuple.Create<string,object,bool> ("", item.Id??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 198 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 198 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRhid", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 198 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRhid

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 199 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 199 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataExaminationId", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 199 "examination.cshtml"
                                                                                                                                         , Tuple.Create<string,object,bool> ("", item.ExaminationsDataExaminationId??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 200 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 200 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataSection", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 200 "examination.cshtml"
                                                                                                                                  , Tuple.Create<string,object,bool> ("", item.ExaminationsDataSection

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 201 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 201 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataField", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 201 "examination.cshtml"
                                                                                                                                , Tuple.Create<string,object,bool> ("", item.ExaminationsDataField

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 202 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 202 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataIsAbnormal", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 202 "examination.cshtml"
                                                                                                                                     , Tuple.Create<string,object,bool> ("", item.ExaminationsDataIsAbnormal

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 203 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 203 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRank", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 203 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRank

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDataValue", true)

#line 204 "examination.cshtml"
                                                         , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 204 "examination.cshtml"
                                                                                      , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataValue", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 204 "examination.cshtml"
                                                                                                                        , Tuple.Create<string,object,bool> ("", item.ExaminationsDataValue

#line default
#line hidden
, false)
);
WriteLiteral(" class=\"form-control\"");

WriteLiteral(" type=\"time\"");

WriteLiteral(" />\r\n                                                            </div>\r\n        " +
"                                                </div>\r\n                        " +
"                            </div>\r\n");


#line 208 "examination.cshtml"
                                                }
                                                if (item.FieldType == "Multi Select")
                                                {


#line default
#line hidden
WriteLiteral("                                                    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\"col-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                                <label");

WriteLiteral(" for=\"\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">");


#line 214 "examination.cshtml"
                                                                                                 Write(item.ExaminationsDataField);


#line default
#line hidden
WriteLiteral("</label>\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 215 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 215 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].id", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 215 "examination.cshtml"
                                                                                                              , Tuple.Create<string,object,bool> ("", item.Id??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 216 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 216 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRhid", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 216 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRhid

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 217 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 217 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataExaminationId", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 217 "examination.cshtml"
                                                                                                                                         , Tuple.Create<string,object,bool> ("", item.ExaminationsDataExaminationId??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 218 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 218 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataSection", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 218 "examination.cshtml"
                                                                                                                                  , Tuple.Create<string,object,bool> ("", item.ExaminationsDataSection

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 219 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 219 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataField", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 219 "examination.cshtml"
                                                                                                                                , Tuple.Create<string,object,bool> ("", item.ExaminationsDataField

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 220 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 220 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataIsAbnormal", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 220 "examination.cshtml"
                                                                                                                                     , Tuple.Create<string,object,bool> ("", item.ExaminationsDataIsAbnormal

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 221 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 221 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRank", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 221 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRank

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <select");

WriteLiteral(" class=\"SearchSelect\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDataValue", true)

#line 222 "examination.cshtml"
                                                                               , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 222 "examination.cshtml"
                                                                                                            , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataValue", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 222 "examination.cshtml"
                                                                                                                                              , Tuple.Create<string,object,bool> ("", item.ExaminationsDataValue

#line default
#line hidden
, false)
);
WriteLiteral(" multiple=\"multiple\"");

WriteLiteral(">\r\n");


#line 223 "examination.cshtml"
                                                                    

#line default
#line hidden

#line 223 "examination.cshtml"
                                                                     foreach (var opt in item.FieldValue.Split('|'))
                                                                    {


#line default
#line hidden
WriteLiteral("                                                                        <option");

WriteAttribute ("value", " value=\"", "\""

#line 225 "examination.cshtml"
                                                , Tuple.Create<string,object,bool> ("", opt

#line default
#line hidden
, false)
);
WriteLiteral(">");


#line 225 "examination.cshtml"
                                                                                        Write(opt);


#line default
#line hidden
WriteLiteral("</option>\r\n");


#line 226 "examination.cshtml"
                                                                    }


#line default
#line hidden
WriteLiteral(@"                                                                </select>
                                                            </div>
                                                        </div>
                                                    </div>
");


#line 231 "examination.cshtml"
                                                }
                                                if (item.FieldType == "Tagbox")
                                                {


#line default
#line hidden
WriteLiteral("                                                    <div");

WriteLiteral(" class=\"row\"");

WriteLiteral(">\r\n                                                        <div");

WriteLiteral(" class=\"col-12\"");

WriteLiteral(">\r\n                                                            <div");

WriteLiteral(" class=\"form-group\"");

WriteLiteral(">\r\n                                                                <label");

WriteLiteral(" for=\"\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">");


#line 237 "examination.cshtml"
                                                                                                 Write(item.ExaminationsDataField);


#line default
#line hidden
WriteLiteral("</label>\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 238 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 238 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].id", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 238 "examination.cshtml"
                                                                                                              , Tuple.Create<string,object,bool> ("", item.Id??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 239 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 239 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRhid", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 239 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRhid

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 240 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 240 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataExaminationId", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 240 "examination.cshtml"
                                                                                                                                         , Tuple.Create<string,object,bool> ("", item.ExaminationsDataExaminationId??Guid.Empty

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 241 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 241 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataSection", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 241 "examination.cshtml"
                                                                                                                                  , Tuple.Create<string,object,bool> ("", item.ExaminationsDataSection

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 242 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 242 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataField", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 242 "examination.cshtml"
                                                                                                                                , Tuple.Create<string,object,bool> ("", item.ExaminationsDataField

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 243 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 243 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataIsAbnormal", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 243 "examination.cshtml"
                                                                                                                                     , Tuple.Create<string,object,bool> ("", item.ExaminationsDataIsAbnormal

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"hidden\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "id", true)

#line 244 "examination.cshtml"
                                                                 , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 244 "examination.cshtml"
                                                                                              , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataRank", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 244 "examination.cshtml"
                                                                                                                               , Tuple.Create<string,object,bool> ("", item.ExaminationsDataRank

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                                <input");

WriteLiteral(" type=\"text\"");

WriteLiteral(" class=\"form-control\"");

WriteAttribute ("id", " id=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDataValue", true)

#line 245 "examination.cshtml"
                                                                                          , Tuple.Create<string,object,bool> (" ", i

#line default
#line hidden
, false)
);
WriteAttribute ("name", " name=\"", "\""
, Tuple.Create<string,object,bool> ("", "ExaminationsDatum[", true)

#line 245 "examination.cshtml"
                                                                                                                       , Tuple.Create<string,object,bool> ("", i

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "].ExaminationsDataValue", true)
);
WriteAttribute ("value", " value=\"", "\""

#line 245 "examination.cshtml"
                                                                                                                                                         , Tuple.Create<string,object,bool> ("", item.ExaminationsDataValue

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                                                            </div>\r\n        " +
"                                                </div>\r\n                        " +
"                            </div>\r\n");


#line 249 "examination.cshtml"
                                                }
                                            }
                                            i++;
                                        }


#line default
#line hidden
WriteLiteral("                                    </div>\r\n                                </div" +
">\r\n                            </div>\r\n");


#line 256 "examination.cshtml"

                        }
                    

#line default
#line hidden
WriteLiteral("\r\n                    <div");

WriteLiteral(" class=\"accordion-item\"");

WriteLiteral(">\r\n                        <h2");

WriteLiteral(" class=\"accordion-header\"");

WriteLiteral(" id=\"headingOne\"");

WriteLiteral(">\r\n                            <button");

WriteLiteral(" class=\"accordion-button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" data-bs-toggle=\"collapse\"");

WriteLiteral(" data-bs-target=\"#Investigation\"");

WriteLiteral(" aria-expanded=\"false\"");

WriteLiteral(" aria-controls=\"Investigation\"");

WriteLiteral(">\r\n                                Investigations\r\n                            </" +
"button>\r\n                        </h2>\r\n\r\n                        <div");

WriteLiteral(" id=\"Investigation\"");

WriteLiteral(" class=\"accordion-collapse collapse show\"");

WriteLiteral(" aria-labelledby=\"headingOne\"");

WriteLiteral(" data-bs-parent=\"#accordionExample\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"accordion-body\"");

WriteLiteral(">\r\n                                <table");

WriteLiteral(" class=\"table text-center text-black-50 rounded-sm shadow-l\"");

WriteLiteral(" style=\"overflow: auto;table-layout:auto\"");

WriteLiteral(">\r\n                                    <thead>\r\n                                 " +
"       <tr>\r\n                                            <th");

WriteLiteral(" width=\"30%\"");

WriteLiteral(@">Name</th>
                                            <th>Type</th>
                                            <th>Notes</th>
                                            <th></th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody");

WriteLiteral(" id=\"invtbody\"");

WriteLiteral(">\r\n");


#line 279 "examination.cshtml"
                                        

#line default
#line hidden

#line 279 "examination.cshtml"
                                         foreach (var investigation in Model.Item4)
                                        {


#line default
#line hidden
WriteLiteral("                                            <tr>\r\n                               " +
"                 <td");

WriteLiteral(" width=\"30%\"");

WriteLiteral(">");


#line 282 "examination.cshtml"
                                                           Write(investigation.ExaminationInvestigationsName);


#line default
#line hidden
WriteLiteral("</td>\r\n                                                <td>");


#line 283 "examination.cshtml"
                                               Write(investigation.ExaminationInvestigationsType);


#line default
#line hidden
WriteLiteral("</td>\r\n                                                <td>");


#line 284 "examination.cshtml"
                                               Write(investigation.ExaminationInvestigationsNotes);


#line default
#line hidden
WriteLiteral("</td>\r\n                                                <td");

WriteLiteral(" width=\'5%\'");

WriteLiteral("><a");

WriteLiteral(" data-menu=\'newInvestigations\'");

WriteAttribute ("onclick", " onclick=\"", "\""
, Tuple.Create<string,object,bool> ("", "editinv(\'", true)

#line 285 "examination.cshtml"
                                                                           , Tuple.Create<string,object,bool> ("", investigation.ExaminationInvestigationsName

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "\',\'", true)

#line 285 "examination.cshtml"
                                                                                                                          , Tuple.Create<string,object,bool> ("", investigation.ExaminationInvestigationsType

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "\',\'", true)

#line 285 "examination.cshtml"
                                                                                                                                                                         , Tuple.Create<string,object,bool> ("", investigation.ExaminationInvestigationsNotes

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "\',\'", true)

#line 285 "examination.cshtml"
                                                                                                                                                                                                                         , Tuple.Create<string,object,bool> ("", investigation.Id

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "\')", true)
);
WriteLiteral("><i");

WriteLiteral(" class=\'fa fa-edit\'");

WriteLiteral(" ></i></a></td>\r\n                                                <td");

WriteLiteral(" width=\'5%\'");

WriteLiteral("><i");

WriteLiteral(" class=\'fa fa-trash color-red-dark\'");

WriteLiteral(" onclick=window.location");

WriteLiteral(" = \'hybrid:deleteinvestigation?invID=");


#line 286 "examination.cshtml"
                                                                                                                                                            Write(investigation.Id);


#line default
#line hidden
WriteLiteral("\'></i></td>\r\n                                            </tr>\r\n");


#line 288 "examination.cshtml"
                                        }


#line default
#line hidden
WriteLiteral("                                    </tbody>\r\n                                </t" +
"able>\r\n                                <div");

WriteLiteral(" class=\"d-flex text-center mb-4\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"me-3 speach-icon\"");

WriteLiteral(">\r\n                                        <a");

WriteLiteral(" class=\"bg-green-dark ms-2\"");

WriteLiteral(" data-menu=\"newInvestigations\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-plus\"");

WriteLiteral("></i></a>\r\n                                    </div>\r\n                          " +
"      </div>\r\n                            </div>\r\n                        </div>" +
"\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"accordion-item\"");

WriteLiteral(">\r\n                        <h2");

WriteLiteral(" class=\"accordion-header\"");

WriteLiteral(" id=\"headingOne\"");

WriteLiteral(">\r\n                            <button");

WriteLiteral(" class=\"accordion-button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" data-bs-toggle=\"collapse\"");

WriteLiteral(" data-bs-target=\"#Treatment\"");

WriteLiteral(" aria-expanded=\"false\"");

WriteLiteral(" aria-controls=\"Treatment\"");

WriteLiteral(">\r\n                                Treatments\r\n                            </butt" +
"on>\r\n                        </h2>\r\n\r\n                        <div");

WriteLiteral(" id=\"Treatment\"");

WriteLiteral(" class=\"accordion-collapse collapse show\"");

WriteLiteral(" aria-labelledby=\"headingOne\"");

WriteLiteral(" data-bs-parent=\"#accordionExample\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"accordion-body\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" id=\"TreatmentsDiv\"");

WriteLiteral(">\r\n");


#line 309 "examination.cshtml"
                                    

#line default
#line hidden

#line 309 "examination.cshtml"
                                     foreach (var Treatment in Model.Item8)
                                    {


#line default
#line hidden
WriteLiteral("                                        ");

WriteLiteral("-");

WriteLiteral("\r\n");


#line 312 "examination.cshtml"

                                        

#line default
#line hidden

#line 313 "examination.cshtml"
                                   Write(Treatment.ExaminationTreatmentsDrugName);


#line default
#line hidden

#line 313 "examination.cshtml"
                                                                                



#line default
#line hidden
WriteLiteral("                                        ");

WriteLiteral(", ");

WriteLiteral("\r\n");


#line 316 "examination.cshtml"

                                        

#line default
#line hidden

#line 317 "examination.cshtml"
                                   Write(Treatment.ExaminationTreatmentsConcentration);


#line default
#line hidden

#line 317 "examination.cshtml"
                                                                                     



#line default
#line hidden
WriteLiteral("                                        ");

WriteLiteral(", ");

WriteLiteral("\r\n");


#line 320 "examination.cshtml"

                                        

#line default
#line hidden

#line 321 "examination.cshtml"
                                   Write(Treatment.ExaminationTreatmentsForm);


#line default
#line hidden

#line 321 "examination.cshtml"
                                                                            



#line default
#line hidden
WriteLiteral("                                        ");

WriteLiteral(", ");

WriteLiteral("\r\n");


#line 324 "examination.cshtml"

                                        

#line default
#line hidden

#line 325 "examination.cshtml"
                                   Write(Treatment.ExaminationTreatmentsRoute);


#line default
#line hidden

#line 325 "examination.cshtml"
                                                                             



#line default
#line hidden
WriteLiteral("                                        ");

WriteLiteral(", ");

WriteLiteral("\r\n");


#line 328 "examination.cshtml"

                                        

#line default
#line hidden

#line 329 "examination.cshtml"
                                   Write(Treatment.ExaminationTreatmentsDosage);


#line default
#line hidden

#line 329 "examination.cshtml"
                                                                              



#line default
#line hidden
WriteLiteral("                                        ");

WriteLiteral(", ");

WriteLiteral("\r\n");


#line 332 "examination.cshtml"

                                        

#line default
#line hidden

#line 333 "examination.cshtml"
                                   Write(Treatment.ExaminationTreatmentsUnit);


#line default
#line hidden

#line 333 "examination.cshtml"
                                                                            



#line default
#line hidden
WriteLiteral("                                        ");

WriteLiteral(", ");

WriteLiteral("\r\n");


#line 336 "examination.cshtml"

                                        

#line default
#line hidden

#line 337 "examination.cshtml"
                                   Write(Treatment.ExaminationTreatmentsFrequency);


#line default
#line hidden

#line 337 "examination.cshtml"
                                                                                 



#line default
#line hidden
WriteLiteral("                                        ");

WriteLiteral(" Hours, ");

WriteLiteral("\r\n");


#line 340 "examination.cshtml"

                                        

#line default
#line hidden

#line 341 "examination.cshtml"
                                   Write(Treatment.ExaminationTreatmentsDuration);


#line default
#line hidden

#line 341 "examination.cshtml"
                                                                                



#line default
#line hidden
WriteLiteral("                                        ");

WriteLiteral(" Days<br />Notes:");

WriteLiteral("\r\n");


#line 344 "examination.cshtml"

                                        

#line default
#line hidden

#line 345 "examination.cshtml"
                                   Write(Treatment.ExaminationTreatmentsNotes);


#line default
#line hidden

#line 345 "examination.cshtml"
                                                                             



#line default
#line hidden
WriteLiteral("                                        ");

WriteLiteral("<br /><br />");

WriteLiteral("\r\n");

WriteLiteral("                                        <div");

WriteLiteral(" class=\"col-3\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\"d-flex text-center mb-4\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"me-3 speach-icon\"");

WriteLiteral(">\r\n                                                    <a");

WriteLiteral(" class=\"color-dark-dark ms-2\"");

WriteLiteral(" data-menu=\"newTreatments\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-edit\"");

WriteLiteral("></i></a>\r\n                                                </div>\r\n              " +
"                              </div>\r\n                                        </" +
"div>\r\n");

WriteLiteral("                                        <div");

WriteLiteral(" class=\"col-3\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\"d-flex text-center mb-4\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"me-3 speach-icon\"");

WriteLiteral(">\r\n                                                    <a");

WriteLiteral(" class=\"bg-highlight-dark ms-2\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-trash\"");

WriteLiteral("></i></a>\r\n                                                </div>\r\n              " +
"                              </div>\r\n                                        </" +
"div>\r\n");


#line 362 "examination.cshtml"
                                    }


#line default
#line hidden
WriteLiteral("                                </div>\r\n                                <div");

WriteLiteral(" class=\"d-flex text-center mb-4\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"me-3 speach-icon\"");

WriteLiteral(">\r\n                                        <a");

WriteLiteral(" class=\"bg-green-dark ms-2\"");

WriteLiteral(" data-menu=\"newTreatments\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-plus\"");

WriteLiteral("></i></a>\r\n                                    </div>\r\n                          " +
"      </div>\r\n                            </div>\r\n                        </div>" +
"\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"accordion-item\"");

WriteLiteral(">\r\n                        <h2");

WriteLiteral(" class=\"accordion-header\"");

WriteLiteral(" id=\"headingOne\"");

WriteLiteral(">\r\n                            <button");

WriteLiteral(" class=\"accordion-button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(" data-bs-toggle=\"collapse\"");

WriteLiteral(" data-bs-target=\"#Attachments\"");

WriteLiteral(" aria-expanded=\"false\"");

WriteLiteral(" aria-controls=\"Attachments\"");

WriteLiteral(">\r\n                                Attachments\r\n                            </but" +
"ton>\r\n                        </h2>\r\n                        <div");

WriteLiteral(" id=\"Attachments\"");

WriteLiteral(" class=\"accordion-collapse collapse show\"");

WriteLiteral(" aria-labelledby=\"headingOne\"");

WriteLiteral(" data-bs-parent=\"#accordionExample\"");

WriteLiteral(">\r\n                            <div");

WriteLiteral(" class=\"accordion-body\"");

WriteLiteral(">\r\n                                <div");

WriteLiteral(" id=\"AttachmentsDiv\"");

WriteLiteral(">\r\n                                    <div");

WriteLiteral(" class=\"row row-auto mb-0\"");

WriteLiteral(">\r\n");


#line 382 "examination.cshtml"
                                        

#line default
#line hidden

#line 382 "examination.cshtml"
                                         foreach (var Attachment in Model.Item10)
                                        {


#line default
#line hidden
WriteLiteral("                                            <div");

WriteLiteral(" class=\"px-1\"");

WriteLiteral(">\r\n                                                <div");

WriteLiteral(" class=\"btn btn-m mb-3 rounded-xl text-uppercase font-900 shadow-s bg-blue-dark\"");

WriteLiteral(" style=\"word-wrap: break-word;\"");

WriteLiteral(">\r\n");

WriteLiteral("                                                    ");


#line 386 "examination.cshtml"
                                               Write(Attachment.AttachmentsName);


#line default
#line hidden
WriteLiteral("\r\n                                                </div>\r\n                       " +
"                         <i");

WriteLiteral(" class=\"fa fa-trash color-red-dark\"");

WriteAttribute ("onclick", " onclick=\"", "\""
, Tuple.Create<string,object,bool> ("", "window.location", true)
, Tuple.Create<string,object,bool> (" ", "=", true)
, Tuple.Create<string,object,bool> (" ", "\'hybrid:deleteexamfiles?FileID=", true)

#line 388 "examination.cshtml"
                                                                                                         , Tuple.Create<string,object,bool> ("", Attachment.Id

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "&ParentID=", true)

#line 388 "examination.cshtml"
                                                                                                                                 , Tuple.Create<string,object,bool> ("", Model.Item9

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "\'", true)
);
WriteLiteral("></i>\r\n                                            </div>\r\n");


#line 390 "examination.cshtml"
                                        }


#line default
#line hidden
WriteLiteral("                                        <div");

WriteLiteral(" class=\"d-flex text-center mb-3\"");

WriteLiteral(">\r\n                                            <div");

WriteLiteral(" class=\"me-3 speach-icon\"");

WriteLiteral(">\r\n                                                <a");

WriteAttribute ("href", " href=\"", "\""
, Tuple.Create<string,object,bool> ("", "hybrid:douploadexamfiles?ParentID=", true)

#line 393 "examination.cshtml"
                                                    , Tuple.Create<string,object,bool> ("", Model.Item9

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "&AccountsID=", true)

#line 393 "examination.cshtml"
                                                                            , Tuple.Create<string,object,bool> ("", SecureStorage.GetAsync("AccountID").Result

#line default
#line hidden
, false)
, Tuple.Create<string,object,bool> ("", "&Type=Examination", true)
);
WriteLiteral(" class=\"bg-green-dark ms-2\"");

WriteLiteral(" data-menu=\"menu-upload\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-plus\"");

WriteLiteral(@"></i></a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <button");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" data-back-button");

WriteLiteral(" class=\"BtnSave btn btn-m btn-full mt-4 mb-4 rounded-l shadow-xl bg-highlight fon" +
"t-900 font-14 text-uppercase w-100\"");

WriteLiteral(">Save</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n    <div");

WriteLiteral(" id=\"newInvestigations\"");

WriteLiteral(" class=\"menu menu-box-bottom menu-box-detached\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"divider mx-auto mt-3 bg-gray-dark opacity-30 rounded-s mb-n1\"");

WriteLiteral(" style=\"height:5px; width:50px;\"");

WriteLiteral(">\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"menu-title mt-0 pt-0\"");

WriteLiteral(">\r\n            <h1>Add/Edit Investigations</h1>\r\n            <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"close-menu\"");

WriteLiteral(">\r\n                <i");

WriteLiteral(" class=\"fa fa-times\"");

WriteLiteral("></i>\r\n            </a>\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"divider divider-margins mb-n2\"");

WriteLiteral("></div>\r\n\r\n        <div");

WriteLiteral(" class=\"content\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"list-group\"");

WriteLiteral(">\r\n                <form");

WriteLiteral(" action=\"hybrid:addeditexamination\"");

WriteLiteral(">\r\n                    <!-- SELECT Chief complaint -->\r\n                    <inpu" +
"t hidden");

WriteLiteral(" name=\"invid\"");

WriteLiteral(" id=\"invid\"");

WriteLiteral(" />\r\n                    <input hidden");

WriteLiteral(" name=\"invs\"");

WriteLiteral(" id=\"invs\"");

WriteLiteral(" />\r\n                    <input hidden");

WriteLiteral(" name=\"examID\"");

WriteAttribute ("value", " value=\"", "\""

#line 424 "examination.cshtml"
                , Tuple.Create<string,object,bool> ("", Model.Item9

#line default
#line hidden
, false)
);
WriteLiteral(" />\r\n                    <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"ExaminationInvestigationsName\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">Name</label>\r\n                        <input");

WriteLiteral(" name=\"ExaminationInvestigationsName\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"invnameid\"");

WriteLiteral(" placeholder=\"Name\"");

WriteLiteral(" />\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"ExaminationInvestigationsType\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">Type</label>\r\n                        <select");

WriteLiteral(" name=\"ExaminationInvestigationsType\"");

WriteLiteral(" id=\"invtypeid\"");

WriteLiteral(">\r\n                            <option");

WriteLiteral(" value=\"\"");

WriteLiteral(" disabled selected>Type</option>\r\n                            <option");

WriteLiteral(" value=\"Lab\"");

WriteLiteral(">Lab</option>\r\n                            <option");

WriteLiteral(" value=\"Radiology\"");

WriteLiteral(">Radiology</option>\r\n                        </select>\r\n                    </div" +
">\r\n                    <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"ExaminationInvestigationsNotes\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">Notes</label>\r\n                        <input");

WriteLiteral(" name=\"ExaminationInvestigationsNotes\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"invnotesid\"");

WriteLiteral(" placeholder=\"Notes\"");

WriteLiteral(" />\r\n                    </div>\r\n\r\n                    <button");

WriteLiteral(" id=\"submit-button\"");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" onclick=\"AddInvestigations(document.getElementById(\'invnameid\'),document.getElem" +
"entById(\'invtypeid\'),document.getElementById(\'invnotesid\'))\"");

WriteLiteral(" data-back-button");

WriteLiteral(" class=\"btn btn-m btn-full mt-4 mb-4 rounded-l shadow-xl bg-highlight font-900 fo" +
"nt-14 text-uppercase w-100\"");

WriteLiteral(">Add</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    <" +
"/div>\r\n\r\n    <div");

WriteLiteral(" id=\"newTreatments\"");

WriteLiteral(" class=\"menu menu-box-bottom menu-box-detached\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"divider mx-auto mt-3 bg-gray-dark opacity-30 rounded-s mb-n1\"");

WriteLiteral(" style=\"height:5px; width:50px;\"");

WriteLiteral(">\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"menu-title mt-0 pt-0\"");

WriteLiteral(">\r\n            <h1>Add New Treatments</h1>\r\n            <a");

WriteLiteral(" href=\"#\"");

WriteLiteral(" class=\"close-menu\"");

WriteLiteral(">\r\n                <i");

WriteLiteral(" class=\"fa fa-times\"");

WriteLiteral("></i>\r\n            </a>\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"divider divider-margins mb-n2\"");

WriteLiteral("></div>\r\n\r\n        <div");

WriteLiteral(" class=\"content\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"list-group\"");

WriteLiteral(">\r\n                <form>\r\n                    <!-- SELECT Chief complaint -->\r\n\r" +
"\n                    <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"TreatmentsName\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">Drug Name</label>\r\n                        <input");

WriteLiteral(" name=\"TreatmentsName\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"treatmentsnameid\"");

WriteLiteral(" placeholder=\"Drug Name\"");

WriteLiteral(" />\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"TreatmentsConcentration\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">Concentration</label>\r\n                        <input");

WriteLiteral(" name=\"TreatmentsConcentration\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"treatmentsconcentrationid\"");

WriteLiteral(" placeholder=\"Concentration\"");

WriteLiteral(" />\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"TreatmentsForm\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">Form</label>\r\n                        <select");

WriteLiteral(" name=\"TreatmentsForm\"");

WriteLiteral(" id=\"treatmentsformid\"");

WriteLiteral(">\r\n                            <option");

WriteLiteral(" value=\"\"");

WriteLiteral(" hidden disabled selected>Form</option>\r\n");


#line 476 "examination.cshtml"
                            

#line default
#line hidden

#line 476 "examination.cshtml"
                             foreach (var form in Model.Item5)
                            {


#line default
#line hidden
WriteLiteral("                                <option");

WriteAttribute ("value", " value=\"", "\""

#line 478 "examination.cshtml"
        , Tuple.Create<string,object,bool> ("", form.Name

#line default
#line hidden
, false)
);
WriteLiteral(">");


#line 478 "examination.cshtml"
                                                      Write(form.Name);


#line default
#line hidden
WriteLiteral("</option>\r\n");


#line 479 "examination.cshtml"
                            }


#line default
#line hidden
WriteLiteral("                        </select>\r\n                    </div>\r\n                  " +
"  <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"TreatmentsRoute\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">Route</label>\r\n                        <select");

WriteLiteral(" name=\"TreatmentsRoute\"");

WriteLiteral(" id=\"treatmentsrouteid\"");

WriteLiteral(">\r\n                            <option");

WriteLiteral(" value=\"\"");

WriteLiteral(" hidden disabled selected>Route</option>\r\n");


#line 486 "examination.cshtml"
                            

#line default
#line hidden

#line 486 "examination.cshtml"
                             foreach (var form in Model.Item6)
                            {


#line default
#line hidden
WriteLiteral("                                <option");

WriteAttribute ("value", " value=\"", "\""

#line 488 "examination.cshtml"
        , Tuple.Create<string,object,bool> ("", form.Name

#line default
#line hidden
, false)
);
WriteLiteral(">");


#line 488 "examination.cshtml"
                                                      Write(form.Name);


#line default
#line hidden
WriteLiteral("</option>\r\n");


#line 489 "examination.cshtml"
                            }


#line default
#line hidden
WriteLiteral("                        </select>\r\n                    </div>\r\n                  " +
"  <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"TreatmentsDosage\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">Dosage</label>\r\n                        <input");

WriteLiteral(" name=\"TreatmentsDosage\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"treatmentsdosageid\"");

WriteLiteral(" placeholder=\"Dosage\"");

WriteLiteral(" />\r\n                    </div>\r\n                    <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"TreatmentsUnit\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">Unit</label>\r\n                        <select");

WriteLiteral(" name=\"TreatmentsUnit\"");

WriteLiteral(" id=\"treatmentsunitid\"");

WriteLiteral(">\r\n                            <option");

WriteLiteral(" value=\"\"");

WriteLiteral(" hidden disabled selected>Unit</option>\r\n");


#line 500 "examination.cshtml"
                            

#line default
#line hidden

#line 500 "examination.cshtml"
                             foreach (var form in Model.Item7)
                            {


#line default
#line hidden
WriteLiteral("                                <option");

WriteAttribute ("value", " value=\"", "\""

#line 502 "examination.cshtml"
        , Tuple.Create<string,object,bool> ("", form.Name

#line default
#line hidden
, false)
);
WriteLiteral(">");


#line 502 "examination.cshtml"
                                                      Write(form.Name);


#line default
#line hidden
WriteLiteral("</option>\r\n");


#line 503 "examination.cshtml"
                            }


#line default
#line hidden
WriteLiteral("                        </select>\r\n                    </div>\r\n\r\n                " +
"    <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"TreatmentsHours\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">Every # Hours</label>\r\n                        <input");

WriteLiteral(" name=\"TreatmentsHours\"");

WriteLiteral(" type=\"number\"");

WriteLiteral(" id=\"treatmentshoursid\"");

WriteLiteral(" placeholder=\"Every # Hours\"");

WriteLiteral(" />\r\n                    </div>\r\n\r\n                    <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"TreatmentsDays\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">For # Days</label>\r\n                        <input");

WriteLiteral(" name=\"TreatmentsDays\"");

WriteLiteral(" type=\"number\"");

WriteLiteral(" id=\"treatmentsdaysid\"");

WriteLiteral(" placeholder=\"For # Days\"");

WriteLiteral(" />\r\n                    </div>\r\n\r\n                    <div");

WriteLiteral(" class=\"input-style no-borders has-icon validate-field mb-4\"");

WriteLiteral(">\r\n                        <label");

WriteLiteral(" for=\"TreatmentsNotes\"");

WriteLiteral(" class=\"color-highlight\"");

WriteLiteral(">Notes</label>\r\n                        <input");

WriteLiteral(" name=\"TreatmentsNotes\"");

WriteLiteral(" type=\"text\"");

WriteLiteral(" id=\"treatmentsnotesid\"");

WriteLiteral(" placeholder=\"Notes\"");

WriteLiteral(" />\r\n                    </div>\r\n\r\n                    <button");

WriteLiteral(" id=\"submit-button\"");

WriteLiteral(" type=\"button\"");

WriteLiteral(@" onclick=""AddTreatments(document.getElementById('treatmentsnameid'),document.getElementById('treatmentsconcentrationid'),document.getElementById('treatmentsformid'),document.getElementById('treatmentsrouteid'),document.getElementById('treatmentsdosageid'),document.getElementById('treatmentsunitid'),document.getElementById('treatmentshoursid'),document.getElementById('treatmentsdaysid'),document.getElementById('treatmentsnotesid'))""");

WriteLiteral(" data-back-button");

WriteLiteral(" class=\"btn btn-m btn-full mt-4 mb-4 rounded-l shadow-xl bg-highlight font-900 fo" +
"nt-14 text-uppercase w-100\"");

WriteLiteral(">Add</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    <" +
"/div>\r\n\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        const InvestigationsArray = [];\r\n        const TreatmentsArray = [];\r\n" +
"        function AddInvestigations(invname,invtype,invnotes)\r\n        {\r\n\r\n     " +
"       debugger;\r\n            var invName = invname.value;\r\n            var invT" +
"ype = invtype.value;\r\n            var invNotes = invnotes.value;\r\n            va" +
"r invId = invid.value;\r\n            //$(\'#invtbody\').append(\"<tr><td width=\'30%\'" +
">\" + invName + \"</td><td>\" + invType +\"</td><td>\" + invNotes + \"</td><td width=\'" +
"5%\'><a data-menu=\'editLocation\'><i class=\'fa fa-edit\'></i></a></td><td width=\'5%" +
"\'><i class=\'fa fa-trash color-red-dark\' onclick=window.location = \'hybrid:delete" +
"investigation?\'></i></td></tr>\");\r\n            InvestigationsArray.push(JSON.str" +
"ingify({invname:invName,invtype:invType,invnotes:invNotes,invid:invId}));\r\n     " +
"       var stringifiedArray = JSON.stringify(InvestigationsArray);\r\n            " +
"$(\'#invs\').val(stringifiedArray);\r\n        }\r\n\r\n        function editinv(invname" +
",invtype,invnotes,invid)\r\n        {\r\n            var invnameinput = document.get" +
"ElementById(\'invnameid\');\r\n            var invtypeinput = document.getElementByI" +
"d(\'invtypeid\');\r\n            var invnotesinput = document.getElementById(\'invnot" +
"esid\');\r\n            var invidinput = document.getElementById(\'invid\');\r\n       " +
"     invnameinput.value = invname;\r\n            invtypeinput.value = invtype;\r\n " +
"           invnotesinput.value = invnotes;\r\n            invidinput.value = invid" +
";\r\n        }\r\n\r\n         function AddTreatments(treatmentname,treatmentconcentra" +
"tion,treatmentform,treatmentroute,treatmentdosage,treatmentunit,treatmenthours,t" +
"reatmentdays,treatmentnotes)\r\n        {\r\n\r\n            debugger;\r\n            va" +
"r TreatmentName = treatmentname.value;\r\n            var TreatmentCon = treatment" +
"concentration.value;\r\n            var TreatmentForm = treatmentform.value;\r\n    " +
"        var TreatmentRoute = treatmentroute.value;\r\n            var TreatmentDos" +
"age = treatmentdosage.value;\r\n            var TreatmentUnit = treatmentunit.valu" +
"e;\r\n            var TreatmentHours = treatmenthours.value;\r\n            var Trea" +
"tmentDays = treatmentdays.value;\r\n            var TreatmentNotes = treatmentnote" +
"s.value;\r\n\r\n            $(\'#TreatmentsDiv\').append(\"-\" + TreatmentName + \", \" + " +
"TreatmentCon + \", \" + TreatmentForm + \", \" + TreatmentRoute + \", \" + TreatmentDo" +
"sage + \", \" + TreatmentUnit + \", \" + TreatmentHours + \" Hours, \" + TreatmentDays" +
" + \" Days<br />Notes:\" + TreatmentNotes + \"<br /><br />\");\r\n            Treatmen" +
"tsArray.push(JSON.stringify({treatmentname:TreatmentName,treatmentconcentration:" +
"TreatmentCon,treatmentform:TreatmentForm,treatmentroute:TreatmentRoute,treatment" +
"dosage:TreatmentDosage,treatmentunit:TreatmentUnit,treatmenthours:TreatmentHours" +
",treatmentdays:TreatmentDays,treatmentnotes:TreatmentNotes}));\r\n            var " +
"stringifiedArray = JSON.stringify(TreatmentsArray);\r\n            $(\'#treatments\'" +
").val(stringifiedArray);\r\n        }\r\n\r\n        $(window).load(function() {\r\n    " +
"        $(\'.SearchSelect\').select2({ width: \'resolve\' });\r\n            $(\'.datep" +
"icker\').datepicker({\r\n                format: \"dd/mm/yyyy\",\r\n                aut" +
"oclose: true,\r\n                clearBtn: true,\r\n            });\r\n            $(\'" +
".taginpuy\').tagsinput();\r\n        });\r\n\r\n\r\n    </script>\r\n\r\n\r\n</body>\r\n");

}
}

// NOTE: this is the default generated helper class. You may choose to extract it to a separate file 
// in order to customize it or share it between multiple templates, and specify the template's base 
// class via the @inherits directive.
public abstract class examinationBase
{

		// This field is OPTIONAL, but used by the default implementation of Generate, Write, WriteAttribute and WriteLiteral
		//
		System.IO.TextWriter __razor_writer;

		// This method is OPTIONAL
		//
		/// <summary>Executes the template and returns the output as a string.</summary>
		/// <returns>The template output.</returns>
		public string GenerateString ()
		{
			using (var sw = new System.IO.StringWriter ()) {
				Generate (sw);
				return sw.ToString ();
			}
		}

		// This method is OPTIONAL, you may choose to implement Write and WriteLiteral without use of __razor_writer
		// and provide another means of invoking Execute.
		//
		/// <summary>Executes the template, writing to the provided text writer.</summary>
		/// <param name="writer">The TextWriter to which to write the template output.</param>
		public void Generate (System.IO.TextWriter writer)
		{
			__razor_writer = writer;
			Execute ();
			__razor_writer = null;
		}

		// This method is REQUIRED, but you may choose to implement it differently
		//
		/// <summary>Writes a literal value to the template output without HTML escaping it.</summary>
		/// <param name="value">The literal value.</param>
		protected void WriteLiteral (string value)
		{
			__razor_writer.Write (value);
		}

		// This method is REQUIRED if the template contains any Razor helpers, but you may choose to implement it differently
		//
		/// <summary>Writes a literal value to the TextWriter without HTML escaping it.</summary>
		/// <param name="writer">The TextWriter to which to write the literal.</param>
		/// <param name="value">The literal value.</param>
		protected static void WriteLiteralTo (System.IO.TextWriter writer, string value)
		{
			writer.Write (value);
		}

		// This method is REQUIRED, but you may choose to implement it differently
		//
		/// <summary>Writes a value to the template output, HTML escaping it if necessary.</summary>
		/// <param name="value">The value.</param>
		/// <remarks>The value may be a Action<System.IO.TextWriter>, as returned by Razor helpers.</remarks>
		protected void Write (object value)
		{
			WriteTo (__razor_writer, value);
		}

		// This method is REQUIRED if the template contains any Razor helpers, but you may choose to implement it differently
		//
		/// <summary>Writes an object value to the TextWriter, HTML escaping it if necessary.</summary>
		/// <param name="writer">The TextWriter to which to write the value.</param>
		/// <param name="value">The value.</param>
		/// <remarks>The value may be a Action<System.IO.TextWriter>, as returned by Razor helpers.</remarks>
		protected static void WriteTo (System.IO.TextWriter writer, object value)
		{
			if (value == null)
				return;

			var write = value as Action<System.IO.TextWriter>;
			if (write != null) {
				write (writer);
				return;
			}

			//NOTE: a more sophisticated implementation would write safe and pre-escaped values directly to the
			//instead of double-escaping. See System.Web.IHtmlString in ASP.NET 4.0 for an example of this.
			writer.Write(System.Net.WebUtility.HtmlEncode (value.ToString ()));
		}

		// This method is REQUIRED, but you may choose to implement it differently
		//
		/// <summary>
		/// Conditionally writes an attribute to the template output.
		/// </summary>
		/// <param name="name">The name of the attribute.</param>
		/// <param name="prefix">The prefix of the attribute.</param>
		/// <param name="suffix">The suffix of the attribute.</param>
		/// <param name="values">Attribute values, each specifying a prefix, value and whether it's a literal.</param>
		protected void WriteAttribute (string name, string prefix, string suffix, params Tuple<string,object,bool>[] values)
		{
			WriteAttributeTo (__razor_writer, name, prefix, suffix, values);
		}

		// This method is REQUIRED if the template contains any Razor helpers, but you may choose to implement it differently
		//
		/// <summary>
		/// Conditionally writes an attribute to a TextWriter.
		/// </summary>
		/// <param name="writer">The TextWriter to which to write the attribute.</param>
		/// <param name="name">The name of the attribute.</param>
		/// <param name="prefix">The prefix of the attribute.</param>
		/// <param name="suffix">The suffix of the attribute.</param>
		/// <param name="values">Attribute values, each specifying a prefix, value and whether it's a literal.</param>
		///<remarks>Used by Razor helpers to write attributes.</remarks>
		protected static void WriteAttributeTo (System.IO.TextWriter writer, string name, string prefix, string suffix, params Tuple<string,object,bool>[] values)
		{
			// this is based on System.Web.WebPages.WebPageExecutingBase
			// Copyright (c) Microsoft Open Technologies, Inc.
			// Licensed under the Apache License, Version 2.0
			if (values.Length == 0) {
				// Explicitly empty attribute, so write the prefix and suffix
				writer.Write (prefix);
				writer.Write (suffix);
				return;
			}

			bool first = true;
			bool wroteSomething = false;

			for (int i = 0; i < values.Length; i++) {
				Tuple<string,object,bool> attrVal = values [i];
				string attPrefix = attrVal.Item1;
				object value = attrVal.Item2;
				bool isLiteral = attrVal.Item3;

				if (value == null) {
					// Nothing to write
					continue;
				}

				// The special cases here are that the value we're writing might already be a string, or that the
				// value might be a bool. If the value is the bool 'true' we want to write the attribute name instead
				// of the string 'true'. If the value is the bool 'false' we don't want to write anything.
				//
				// Otherwise the value is another object (perhaps an IHtmlString), and we'll ask it to format itself.
				string stringValue;
				bool? boolValue = value as bool?;
				if (boolValue == true) {
					stringValue = name;
				} else if (boolValue == false) {
					continue;
				} else {
					stringValue = value as string;
				}

				if (first) {
					writer.Write (prefix);
					first = false;
				} else {
					writer.Write (attPrefix);
				}

				if (isLiteral) {
					writer.Write (stringValue ?? value);
				} else {
					WriteTo (writer, stringValue ?? value);
				}
				wroteSomething = true;
			}
			if (wroteSomething) {
				writer.Write (suffix);
			}
		}
		// This method is REQUIRED. The generated Razor subclass will override it with the generated code.
		//
		///<summary>Executes the template, writing output to the Write and WriteLiteral methods.</summary>.
		///<remarks>Not intended to be called directly. Call the Generate method instead.</remarks>
		public abstract void Execute ();

}
}
#pragma warning restore 1591
